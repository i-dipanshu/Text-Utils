{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","toggleMode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","htmlFor","style","text","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","setText","heading","value","onChange","event","console","log","target","rows","backgroundColor","disabled","length","newText","toUpperCase","toLowerCase","split","join","copyText","document","getElementById","select","navigator","clipboard","writeText","filter","element","About","mystyle","color","aria-labelledby","data-bs-parent","prototype","text1","defaultProps","App","modes","setMode","_useState3","_useState4","textStyle","setTextStyle","_useState5","_useState6","Fragment","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0c4aa95d.chunk.js","sourcesContent":["import React from \"react\";\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      toggleMode={props.toggleMode}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.text1}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div className=\"form-check form-switch\" onClick={props.toggleMode}>\r\n            <input\r\n              className=\"form-check-input \"\r\n              type=\"checkbox\"\r\n              // role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n              style={props.style}\r\n            >\r\n              {props.text}\r\n            </label>\r\n          </div>\r\n          <form className=\"d-flex mx-3\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: \"PropTypes.String.isRequired\",\r\n  text1: \"PropTypes.String\",\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"No-title\",\r\n  text1: \"None\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  // hook creation\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // logics\r\n  const handleUpClick = () => {\r\n    console.log(\"Upppercase was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    console.log(\"Lowercase was clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  // method 1\r\n  // const copyText = () => {\r\n  //   console.log(\"Copy was clicked\");\r\n  //   let copyText = text;\r\n  //   navigator.clipboard.writeText(copyText.toString());\r\n  //   alert(\"Copied\");\r\n  // };\r\n\r\n  // method 2\r\n  const copyText = () => {\r\n    console.log(\"Copy was clicked\");\r\n    let copyText = document.getElementById(\"myBox\");\r\n    copyText.select();\r\n    navigator.clipboard.writeText(copyText.value);\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    console.log(\"Remove Extra spaces was clicked\");\r\n    let newText = text.split(/[ ] +/);\r\n    setText(newText.join(\" \"));\r\n  };\r\n\r\n  const clearText = () => {\r\n    console.log(\"Reset was clicked\");\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"Text was updated.\");\r\n    // takes input as sets it to text\r\n    setText(event.target.value);\r\n  };\r\n   \r\n  const mystyle = {\r\n    backgroundColor: \"#FFFFF0\"\r\n  }\r\n  // return statement\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={mystyle}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-2 \"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert To Uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-2 \"\r\n          onClick={handleLoClick}\r\n        >\r\n          Convert To LowerCase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-success mx-2 my-2 \"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-secondary mx-2 my-2 \"\r\n          onClick={copyText}\r\n        >\r\n          Copy to clipboard\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-danger mx-2 my-2 \"\r\n          onClick={clearText}\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h3>Text Summary</h3>\r\n        <p>\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} characters\r\n        </p>\r\n        <p>{text.split(\" \").length * 0.08} min read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0?text:'Nothing to preview'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// rfc\r\nexport default function About(props) {\r\n  const mystyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n    backgroundColor: props.mode === \"dark\" ? \"rgb(34, 48, 60)\" : \"white\",\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"my-3 mx-2\">About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={mystyle}\r\n            >\r\n              <strong>UTILITIES</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              <li>Uppercase : Coverts the input in Block Letters</li>\r\n              <li>Lowercase : Coverts the input in Small Letters</li>\r\n              <li>Copy to clipboard : Copies the whole input</li>\r\n              <li>Extra spaces : Removes the Extra spaces in the input</li>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={mystyle}\r\n            >\r\n              <strong>About Me</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={mystyle}>\r\n              Just a geek on the way to become self taught developers\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport TextForm from \"./Components/TextForm\";\r\nimport About from \"./Components/About\";\r\nimport React, { useState } from \"react\";\r\n\r\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [modes, setMode] = useState(\"light\");\r\n  const [textStyle, setTextStyle] = useState({\r\n    color: \"black\"\r\n  });\r\n  const [text, setText] = useState(\"Dark Mode\");\r\n\r\n  // toogle method\r\n  const toggleMode = () => {\r\n    if (modes === \"light\") {\r\n      setMode(\"dark\");\r\n      setText(\"Light Mode\");\r\n      setTextStyle({\r\n        color: \"white\",\r\n      });\r\n      document.body.style.backgroundColor = \"rgb(34, 48, 60)\";\r\n      document.body.style.color = \"white\";\r\n      document.title = \"TextUtils - Dark\";\r\n    } else {\r\n      setMode(\"light\");\r\n      setText(\"Dark Mode\");\r\n      setTextStyle({\r\n        color: \"black\",\r\n      });\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.body.style.color = \"black\";\r\n      document.title = \"TextUtils\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n      {/* passing varaibles to components */}\r\n      <Navbar\r\n        title=\"TextUtils\"\r\n        text1=\"About\"\r\n        mode={modes}\r\n        toggleMode={toggleMode}\r\n        text={text}\r\n        style={textStyle}\r\n      />\r\n      <TextForm heading=\"Write below\" />\r\n      <About mode={modes} />\r\n\r\n      {/* <Routes> */}\r\n      {/* <div className=\"container my-3\"> */}\r\n      {/* <Route exact path=\"/\" element={<TextForm heading=\"Write below\" />} /> */}\r\n      {/* </div> */}\r\n\r\n      {/* <Route exact path=\"/about\" element={<About mode={modes} />} /> */}\r\n      {/* </Routes> */}\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}