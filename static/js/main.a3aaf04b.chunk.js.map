{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","toggleMode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","role","htmlFor","style","text","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","toLowerCase","split","join","copyText","document","getElementById","select","navigator","clipboard","writeText","length","prototype","text1","defaultProps","App","modes","setMode","_useState3","color","_useState4","textStyle","setTextStyle","_useState5","_useState6","Fragment","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a3aaf04b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  const navBg = {\r\n    backgroundColor: \"rgb(34, 48, 60);\",\r\n  };\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      toggleMode={props.toggleMode}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.text1}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div className=\"form-check form-switch\" onClick={props.toggleMode}>\r\n            <input\r\n              className=\"form-check-input \"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n              style={props.style}\r\n            >\r\n              {props.text}\r\n            </label>\r\n          </div>\r\n          <form className=\"d-flex mx-3\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: \"PropTypes.String.isRequired\",\r\n  text1: \"PropTypes.String\",\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"No-title\",\r\n  text1: \"None\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  // hook creation\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // logics\r\n  const handleUpClick = () => {\r\n    console.log(\"Upppercase was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    console.log(\"Lowercase was clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n\r\n  // method 1\r\n  // const copyText = () => {\r\n  //   console.log(\"Copy was clicked\");\r\n  //   let copyText = text;\r\n  //   navigator.clipboard.writeText(copyText.toString());\r\n  //   alert(\"Copied\");\r\n  // };\r\n\r\n  // method 2\r\n  const copyText = () => {\r\n    console.log(\"Copy was clicked\");\r\n    let copyText = document.getElementById(\"myBox\");\r\n    copyText.select();\r\n    navigator.clipboard.writeText(copyText.value);\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    console.log(\"Remove Extra spaces was clicked\");\r\n    let newText = text.split(/[ ] +/);\r\n    setText(newText.join(\" \"));\r\n  };\r\n\r\n  const clearText = () => {\r\n    console.log(\"Reset was clicked\");\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"Text was updated.\");\r\n    // takes input as sets it to text\r\n    setText(event.target.value);\r\n  };\r\n  // return statement\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n          Convert To Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert To LowerCase\r\n        </button>\r\n        <button className=\"btn btn-success mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-secondary mx-2\" onClick={copyText}>\r\n          Copy to clipboard\r\n        </button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={clearText}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h3>Text Summary</h3>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{text.split(\" \").length * 0.08} min read</p>\r\n        {/* <h2>Preview</h2>\r\n        <p>{text}</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\n// import About from \"./Components/About\";\nimport React, { useState } from \"react\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [modes, setMode] = useState(\"light\");\n  const [textStyle, setTextStyle] = useState({\n    color: \"black\",\n  });\n  const [text, setText] = useState(\"Dark Mode\");\n\n  // toogle method\n  const toggleMode = () => {\n    if (modes === \"light\") {\n      setMode(\"dark\");\n      setText(\"Light Mode\");\n      setTextStyle({\n        color: \"white\",\n      });\n      document.body.style.backgroundColor = \"rgb(34, 48, 60)\";\n      document.body.style.color = \"white\";\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode(\"light\");\n      setText(\"Dark Mode\");\n      setTextStyle({\n        color: \"black\",\n      });\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      document.title = \"TextUtils\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        text1=\"About\"\n        mode={modes}\n        toggleMode={toggleMode}\n        text={text}\n        style={textStyle}\n      />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Write below\" />\n      </div>\n      {/* <Routes>\n            <Route exact path=\"/\" element={<TextForm heading=\"Write below\" />} />\n\n            <Route exact path=\"/about\" element={<About />} />\n        </Routes>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}