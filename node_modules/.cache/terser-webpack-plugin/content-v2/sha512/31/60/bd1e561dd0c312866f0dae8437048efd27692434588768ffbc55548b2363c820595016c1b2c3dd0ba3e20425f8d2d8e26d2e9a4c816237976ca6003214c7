{"map":"{\"version\":3,\"sources\":[\"E:/My Codes/Web Development/ReactJs/Text-Utils/src/Components/Navbar.js\",\"E:/My Codes/Web Development/ReactJs/Text-Utils/src/Components/TextForm.js\",\"E:/My Codes/Web Development/ReactJs/Text-Utils/src/Components/About.js\",\"E:/My Codes/Web Development/ReactJs/Text-Utils/src/App.js\",\"E:/My Codes/Web Development/ReactJs/Text-Utils/src/reportWebVitals.js\",\"E:/My Codes/Web Development/ReactJs/Text-Utils/src/index.js\"],\"names\":[\"Navbar\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"concat\",\"mode\",\"toggleMode\",\"react_router_dom\",\"to\",\"title\",\"type\",\"data-bs-toggle\",\"data-bs-target\",\"aria-controls\",\"aria-expanded\",\"aria-label\",\"id\",\"aria-current\",\"text1\",\"onClick\",\"role\",\"htmlFor\",\"style\",\"text\",\"placeholder\",\"TextForm\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"setText\",\"heading\",\"value\",\"onChange\",\"event\",\"console\",\"log\",\"target\",\"rows\",\"newText\",\"toUpperCase\",\"toLowerCase\",\"split\",\"join\",\"copyText\",\"document\",\"getElementById\",\"select\",\"navigator\",\"clipboard\",\"writeText\",\"length\",\"About\",\"backgroundColor\",\"color\",\"myStyle1\",\"setMyStyle1\",\"_useState3\",\"_useState4\",\"btnText\",\"setBtnText\",\"_useState5\",\"_useState6\",\"cngClass\",\"setcngClass\",\"aria-labelledby\",\"data-bs-parent\",\"prototype\",\"defaultProps\",\"App\",\"modes\",\"setMode\",\"textStyle\",\"setTextStyle\",\"Fragment\",\"body\",\"react_router\",\"exact\",\"path\",\"element\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"e\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"render\",\"StrictMode\",\"src_App\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from \\\"react\\\";\\r\\nimport {Link} from 'react-router-dom';\\r\\n\\r\\nexport default function Navbar(props) {\\r\\n  const navBg = {\\r\\n    backgroundColor: \\\"rgb(34, 48, 60);\\\",\\r\\n  };\\r\\n  return (\\r\\n    <nav\\r\\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\\r\\n      toggleMode={props.toggleMode}\\r\\n    >\\r\\n      <div className=\\\"container-fluid\\\">\\r\\n        <Link className=\\\"navbar-brand\\\" to=\\\"/\\\">\\r\\n          {props.title}\\r\\n        </Link>\\r\\n        <button\\r\\n          className=\\\"navbar-toggler\\\"\\r\\n          type=\\\"button\\\"\\r\\n          data-bs-toggle=\\\"collapse\\\"\\r\\n          data-bs-target=\\\"#navbarSupportedContent\\\"\\r\\n          aria-controls=\\\"navbarSupportedContent\\\"\\r\\n          aria-expanded=\\\"false\\\"\\r\\n          aria-label=\\\"Toggle navigation\\\"\\r\\n        >\\r\\n          <span className=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n        <div className=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n          <ul className=\\\"navbar-nav me-auto mb-2 mb-lg-0\\\">\\r\\n            <li className=\\\"nav-item\\\">\\r\\n              <Link className=\\\"nav-link active\\\" aria-current=\\\"page\\\" to=\\\"/\\\">\\r\\n                Home\\r\\n              </Link>\\r\\n            </li>\\r\\n            <li className=\\\"nav-item\\\">\\r\\n              <Link className=\\\"nav-link\\\" to=\\\"/about\\\">\\r\\n                {props.text1}\\r\\n              </Link>\\r\\n            </li>\\r\\n          </ul>\\r\\n          <div className=\\\"form-check form-switch\\\" onClick={props.toggleMode}>\\r\\n            <input\\r\\n              className=\\\"form-check-input \\\"\\r\\n              type=\\\"checkbox\\\"\\r\\n              role=\\\"switch\\\"\\r\\n              id=\\\"flexSwitchCheckDefault\\\"\\r\\n            />\\r\\n            <label\\r\\n              className=\\\"form-check-label\\\"\\r\\n              htmlFor=\\\"flexSwitchCheckDefault\\\"\\r\\n              style={props.style}\\r\\n            >\\r\\n              {props.text}\\r\\n            </label>\\r\\n          </div>\\r\\n          <form className=\\\"d-flex mx-3\\\">\\r\\n            <input\\r\\n              className=\\\"form-control me-2\\\"\\r\\n              type=\\\"search\\\"\\r\\n              placeholder=\\\"Search\\\"\\r\\n              aria-label=\\\"Search\\\"\\r\\n            />\\r\\n            <button className=\\\"btn btn-primary\\\" type=\\\"submit\\\">\\r\\n              Search\\r\\n            </button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </nav>\\r\\n  );\\r\\n}\\r\\n\\r\\nNavbar.prototype = {\\r\\n  title: \\\"PropTypes.String.isRequired\\\",\\r\\n  text1: \\\"PropTypes.String\\\",\\r\\n};\\r\\n\\r\\nNavbar.defaultProps = {\\r\\n  title: \\\"No-title\\\",\\r\\n  text1: \\\"None\\\",\\r\\n};\\r\\n\",\"import React, { useState } from \\\"react\\\";\\r\\n\\r\\nexport default function TextForm(props) {\\r\\n  // hook creation\\r\\n  const [text, setText] = useState(\\\"\\\");\\r\\n\\r\\n  // logics\\r\\n  const handleUpClick = () => {\\r\\n    console.log(\\\"Upppercase was clicked\\\");\\r\\n    let newText = text.toUpperCase();\\r\\n    setText(newText);\\r\\n  };\\r\\n\\r\\n  const handleLoClick = () => {\\r\\n    console.log(\\\"Lowercase was clicked\\\");\\r\\n    let newText = text.toLowerCase();\\r\\n    setText(newText);\\r\\n  };\\r\\n\\r\\n  // method 1\\r\\n  // const copyText = () => {\\r\\n  //   console.log(\\\"Copy was clicked\\\");\\r\\n  //   let copyText = text;\\r\\n  //   navigator.clipboard.writeText(copyText.toString());\\r\\n  //   alert(\\\"Copied\\\");\\r\\n  // };\\r\\n\\r\\n  // method 2\\r\\n  const copyText = () => {\\r\\n    console.log(\\\"Copy was clicked\\\");\\r\\n    let copyText = document.getElementById(\\\"myBox\\\");\\r\\n    copyText.select();\\r\\n    navigator.clipboard.writeText(copyText.value);\\r\\n  };\\r\\n  const handleExtraSpaces = () => {\\r\\n    console.log(\\\"Remove Extra spaces was clicked\\\");\\r\\n    let newText = text.split(/[ ] +/);\\r\\n    setText(newText.join(\\\" \\\"));\\r\\n  };\\r\\n\\r\\n  const clearText = () => {\\r\\n    console.log(\\\"Reset was clicked\\\");\\r\\n    let newText = \\\"\\\";\\r\\n    setText(newText);\\r\\n  };\\r\\n\\r\\n  const handleOnChange = (event) => {\\r\\n    console.log(\\\"Text was updated.\\\");\\r\\n    // takes input as sets it to text\\r\\n    setText(event.target.value);\\r\\n  };\\r\\n  // return statement\\r\\n  return (\\r\\n    <div>\\r\\n      <div className=\\\"container\\\">\\r\\n        <h2>{props.heading}</h2>\\r\\n        <div className=\\\"mb-3\\\">\\r\\n          <textarea\\r\\n            className=\\\"form-control\\\"\\r\\n            value={text}\\r\\n            onChange={handleOnChange}\\r\\n            id=\\\"myBox\\\"\\r\\n            rows=\\\"8\\\"\\r\\n          ></textarea>\\r\\n        </div>\\r\\n        <button className=\\\"btn btn-primary\\\" onClick={handleUpClick}>\\r\\n          Convert To Uppercase\\r\\n        </button>\\r\\n        <button className=\\\"btn btn-primary mx-2\\\" onClick={handleLoClick}>\\r\\n          Convert To LowerCase\\r\\n        </button>\\r\\n        <button className=\\\"btn btn-success mx-2\\\" onClick={handleExtraSpaces}>\\r\\n          Remove Extra Spaces\\r\\n        </button>\\r\\n        <button className=\\\"btn btn-secondary mx-2\\\" onClick={copyText}>\\r\\n          Copy to clipboard\\r\\n        </button>\\r\\n        <button className=\\\"btn btn-danger mx-2\\\" onClick={clearText}>\\r\\n          Reset\\r\\n        </button>\\r\\n      </div>\\r\\n      <div className=\\\"container my-3\\\">\\r\\n        <h3>Text Summary</h3>\\r\\n        <p>\\r\\n          {text.split(\\\" \\\").length} words and {text.length} characters\\r\\n        </p>\\r\\n        <p>{text.split(\\\" \\\").length * 0.08} min read</p>\\r\\n        {/* <h2>Preview</h2>\\r\\n        <p>{text}</p> */}\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\",\"import React, { useState } from \\\"react\\\";\\r\\n\\r\\n// rfc\\r\\nexport default function About() {\\r\\n  // state variables\\r\\n  const [myStyle1, setMyStyle1] = useState({\\r\\n    backgroundColor: \\\"rgb(34, 48, 60)\\\",\\r\\n    color: \\\"white\\\",\\r\\n  });\\r\\n  const [btnText, setBtnText] = useState(\\\"Dark Mode\\\");\\r\\n  const [cngClass, setcngClass] = useState(\\\"btn btn-dark\\\");\\r\\n\\r\\n  let myStyle = {\\r\\n    color: \\\"blue\\\",\\r\\n  };\\r\\n  // methods\\r\\n  const toggleDarkMode = () => {\\r\\n    if (myStyle1.color == \\\"white\\\") {\\r\\n      setMyStyle1({\\r\\n        backgroundColor: \\\"white\\\",\\r\\n        color: \\\"black\\\",\\r\\n      });\\r\\n      setBtnText(\\\"Dark Mode\\\");\\r\\n      setcngClass(\\\"btn btn-dark\\\");\\r\\n    } else {\\r\\n      setMyStyle1({\\r\\n        backgroundColor: \\\"rgb(34, 48, 60)\\\",\\r\\n        color: \\\"white\\\",\\r\\n      });\\r\\n      setBtnText(\\\"Light Mode\\\");\\r\\n      setcngClass(\\\"btn btn-light\\\");\\r\\n    }\\r\\n  };\\r\\n  return (\\r\\n    <div className=\\\"container\\\">\\r\\n      <h2 className=\\\"my-3 mx-2\\\">\\r\\n        About Us\\r\\n      </h2>\\r\\n      <div className=\\\"accordion\\\" id=\\\"accordionExample\\\" style={myStyle1}>\\r\\n        <div className=\\\"accordion-item\\\">\\r\\n          <h2 className=\\\"accordion-header\\\" id=\\\"headingOne\\\">\\r\\n            <button\\r\\n              className=\\\"accordion-button\\\"\\r\\n              type=\\\"button\\\"\\r\\n              data-bs-toggle=\\\"collapse\\\"\\r\\n              data-bs-target=\\\"#collapseOne\\\"\\r\\n              aria-expanded=\\\"true\\\"\\r\\n              aria-controls=\\\"collapseOne\\\"\\r\\n              style={myStyle1}\\r\\n            >\\r\\n              Accordion Item #1\\r\\n            </button>\\r\\n          </h2>\\r\\n          <div\\r\\n            id=\\\"collapseOne\\\"\\r\\n            className=\\\"accordion-collapse collapse\\\"\\r\\n            aria-labelledby=\\\"headingOne\\\"\\r\\n            data-bs-parent=\\\"#accordionExample\\\"\\r\\n          >\\r\\n            <div className=\\\"accordion-body\\\" style={myStyle1}>\\r\\n              <strong>This is the first item's accordion body.</strong> It is\\r\\n              shown by default, until the collapse plugin adds the appropriate\\r\\n              classNamees that we use to style each element. These classNamees\\r\\n              control the overall appearance, as well as the showing and hiding\\r\\n              via CSS transitions. You can modify any of this with custom CSS or\\r\\n              overriding our default variables. It's also worth noting that just\\r\\n              about any HTML can go within the <code>.accordion-body</code>,\\r\\n              though the transition does limit overflow.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div className=\\\"accordion-item\\\">\\r\\n          <h2 className=\\\"accordion-header\\\" id=\\\"headingTwo\\\">\\r\\n            <button\\r\\n              className=\\\"accordion-button collapsed\\\"\\r\\n              type=\\\"button\\\"\\r\\n              data-bs-toggle=\\\"collapse\\\"\\r\\n              data-bs-target=\\\"#collapseTwo\\\"\\r\\n              aria-expanded=\\\"false\\\"\\r\\n              aria-controls=\\\"collapseTwo\\\"\\r\\n              style={myStyle1}\\r\\n            >\\r\\n              Accordion Item #2\\r\\n            </button>\\r\\n          </h2>\\r\\n          <div\\r\\n            id=\\\"collapseTwo\\\"\\r\\n            className=\\\"accordion-collapse collapse\\\"\\r\\n            aria-labelledby=\\\"headingTwo\\\"\\r\\n            data-bs-parent=\\\"#accordionExample\\\"\\r\\n          >\\r\\n            <div className=\\\"accordion-body\\\" style={myStyle1}>\\r\\n              <strong>This is the second item's accordion body.</strong> It is\\r\\n              hidden by default, until the collapse plugin adds the appropriate\\r\\n              classNamees that we use to style each element. These classNamees\\r\\n              control the overall appearance, as well as the showing and hiding\\r\\n              via CSS transitions. You can modify any of this with custom CSS or\\r\\n              overriding our default variables. It's also worth noting that just\\r\\n              about any HTML can go within the <code>.accordion-body</code>,\\r\\n              though the transition does limit overflow.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div className=\\\"accordion-item\\\">\\r\\n          <h2 className=\\\"accordion-header\\\" id=\\\"headingThree\\\">\\r\\n            <button\\r\\n              className=\\\"accordion-button collapsed\\\"\\r\\n              type=\\\"button\\\"\\r\\n              data-bs-toggle=\\\"collapse\\\"\\r\\n              data-bs-target=\\\"#collapseThree\\\"\\r\\n              aria-expanded=\\\"false\\\"\\r\\n              aria-controls=\\\"collapseThree\\\"\\r\\n              style={myStyle1}\\r\\n            >\\r\\n              Accordion Item #3\\r\\n            </button>\\r\\n          </h2>\\r\\n          <div\\r\\n            id=\\\"collapseThree\\\"\\r\\n            className=\\\"accordion-collapse collapse\\\"\\r\\n            aria-labelledby=\\\"headingThree\\\"\\r\\n            data-bs-parent=\\\"#accordionExample\\\"\\r\\n          >\\r\\n            <div className=\\\"accordion-body\\\" style={myStyle1}>\\r\\n              <strong>This is the third item's accordion body.</strong> It is\\r\\n              hidden by default, until the collapse plugin adds the appropriate\\r\\n              classNamees that we use to style each element. These classNamees\\r\\n              control the overall appearance, as well as the showing and hiding\\r\\n              via CSS transitions. You can modify any of this with custom CSS or\\r\\n              overriding our default variables. It's also worth noting that just\\r\\n              about any HTML can go within the <code>.accordion-body</code>,\\r\\n              though the transition does limit overflow.\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div className=\\\"my-3\\\">\\r\\n        <button type=\\\"button\\\" className={cngClass} onClick={toggleDarkMode}>\\r\\n          {btnText}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\",\"import \\\"./App.css\\\";\\nimport Navbar from \\\"./Components/Navbar\\\";\\nimport TextForm from \\\"./Components/TextForm\\\";\\nimport About from \\\"./Components/About\\\";\\nimport React, { useState } from \\\"react\\\";\\n\\nimport { BrowserRouter as Router, Routes, Route } from \\\"react-router-dom\\\";\\n\\nfunction App() {\\n  const [modes, setMode] = useState(\\\"light\\\");\\n  const [textStyle, setTextStyle] = useState({\\n    color: \\\"black\\\",\\n  });\\n  const [text, setText] = useState(\\\"Dark Mode\\\");\\n\\n  // toogle method\\n  const toggleMode = () => {\\n    if (modes === \\\"light\\\") {\\n      setMode(\\\"dark\\\");\\n      setText(\\\"Light Mode\\\");\\n      setTextStyle({\\n        color: \\\"white\\\",\\n      });\\n      document.body.style.backgroundColor = \\\"rgb(34, 48, 60)\\\";\\n      document.body.style.color = \\\"white\\\";\\n      document.title = \\\"TextUtils - Dark\\\";\\n    } else {\\n      setMode(\\\"light\\\");\\n      setText(\\\"Dark Mode\\\");\\n      setTextStyle({\\n        color: \\\"black\\\",\\n      });\\n      document.body.style.backgroundColor = \\\"white\\\";\\n      document.body.style.color = \\\"black\\\";\\n      document.title = \\\"TextUtils\\\";\\n    }\\n  };\\n\\n  return (\\n    <>\\n      <Router>\\n          <Navbar\\n            title=\\\"TextUtils\\\"\\n            text1=\\\"About\\\"\\n            mode={modes}\\n            toggleMode={toggleMode}\\n            text={text}\\n            style={textStyle}\\n          />\\n          <div className=\\\"container my-3\\\">\\n        <Routes>\\n            <Route exact path=\\\"/\\\" element={<TextForm heading=\\\"Write below\\\" />} />\\n\\n            <Route exact path=\\\"/about\\\" element={<About />} />\\n        </Routes>\\n          </div>\\n      </Router>\\n    </>\\n  );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,a,t){},18:function(e,a,t){},20:function(e,a,t){\"use strict\";t.r(a);var l=t(1),o=t.n(l),n=t(6),c=t.n(n),r=(t(16),t(3)),s=(t(18),t(4));function i(e){return o.a.createElement(\"nav\",{className:\"navbar navbar-expand-lg navbar-\".concat(e.mode,\" bg-\").concat(e.mode),toggleMode:e.toggleMode},o.a.createElement(\"div\",{className:\"container-fluid\"},o.a.createElement(s.b,{className:\"navbar-brand\",to:\"/\"},e.title),o.a.createElement(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#navbarSupportedContent\",\"aria-controls\":\"navbarSupportedContent\",\"aria-expanded\":\"false\",\"aria-label\":\"Toggle navigation\"},o.a.createElement(\"span\",{className:\"navbar-toggler-icon\"})),o.a.createElement(\"div\",{className:\"collapse navbar-collapse\",id:\"navbarSupportedContent\"},o.a.createElement(\"ul\",{className:\"navbar-nav me-auto mb-2 mb-lg-0\"},o.a.createElement(\"li\",{className:\"nav-item\"},o.a.createElement(s.b,{className:\"nav-link active\",\"aria-current\":\"page\",to:\"/\"},\"Home\")),o.a.createElement(\"li\",{className:\"nav-item\"},o.a.createElement(s.b,{className:\"nav-link\",to:\"/about\"},e.text1))),o.a.createElement(\"div\",{className:\"form-check form-switch\",onClick:e.toggleMode},o.a.createElement(\"input\",{className:\"form-check-input \",type:\"checkbox\",role:\"switch\",id:\"flexSwitchCheckDefault\"}),o.a.createElement(\"label\",{className:\"form-check-label\",htmlFor:\"flexSwitchCheckDefault\",style:e.style},e.text)),o.a.createElement(\"form\",{className:\"d-flex mx-3\"},o.a.createElement(\"input\",{className:\"form-control me-2\",type:\"search\",placeholder:\"Search\",\"aria-label\":\"Search\"}),o.a.createElement(\"button\",{className:\"btn btn-primary\",type:\"submit\"},\"Search\")))))}function d(e){var a=Object(l.useState)(\"\"),t=Object(r.a)(a,2),n=t[0],c=t[1];return o.a.createElement(\"div\",null,o.a.createElement(\"div\",{className:\"container\"},o.a.createElement(\"h2\",null,e.heading),o.a.createElement(\"div\",{className:\"mb-3\"},o.a.createElement(\"textarea\",{className:\"form-control\",value:n,onChange:function(e){console.log(\"Text was updated.\"),c(e.target.value)},id:\"myBox\",rows:\"8\"})),o.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:function(){console.log(\"Upppercase was clicked\");var e=n.toUpperCase();c(e)}},\"Convert To Uppercase\"),o.a.createElement(\"button\",{className:\"btn btn-primary mx-2\",onClick:function(){console.log(\"Lowercase was clicked\");var e=n.toLowerCase();c(e)}},\"Convert To LowerCase\"),o.a.createElement(\"button\",{className:\"btn btn-success mx-2\",onClick:function(){console.log(\"Remove Extra spaces was clicked\");var e=n.split(/[ ] +/);c(e.join(\" \"))}},\"Remove Extra Spaces\"),o.a.createElement(\"button\",{className:\"btn btn-secondary mx-2\",onClick:function(){console.log(\"Copy was clicked\");var e=document.getElementById(\"myBox\");e.select(),navigator.clipboard.writeText(e.value)}},\"Copy to clipboard\"),o.a.createElement(\"button\",{className:\"btn btn-danger mx-2\",onClick:function(){console.log(\"Reset was clicked\");c(\"\")}},\"Reset\")),o.a.createElement(\"div\",{className:\"container my-3\"},o.a.createElement(\"h3\",null,\"Text Summary\"),o.a.createElement(\"p\",null,n.split(\" \").length,\" words and \",n.length,\" characters\"),o.a.createElement(\"p\",null,.08*n.split(\" \").length,\" min read\")))}function m(){var e=Object(l.useState)({backgroundColor:\"rgb(34, 48, 60)\",color:\"white\"}),a=Object(r.a)(e,2),t=a[0],n=a[1],c=Object(l.useState)(\"Dark Mode\"),s=Object(r.a)(c,2),i=s[0],d=s[1],m=Object(l.useState)(\"btn btn-dark\"),u=Object(r.a)(m,2),b=u[0],h=u[1];return o.a.createElement(\"div\",{className:\"container\"},o.a.createElement(\"h2\",{className:\"my-3 mx-2\"},\"About Us\"),o.a.createElement(\"div\",{className:\"accordion\",id:\"accordionExample\",style:t},o.a.createElement(\"div\",{className:\"accordion-item\"},o.a.createElement(\"h2\",{className:\"accordion-header\",id:\"headingOne\"},o.a.createElement(\"button\",{className:\"accordion-button\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseOne\",\"aria-expanded\":\"true\",\"aria-controls\":\"collapseOne\",style:t},\"Accordion Item #1\")),o.a.createElement(\"div\",{id:\"collapseOne\",className:\"accordion-collapse collapse\",\"aria-labelledby\":\"headingOne\",\"data-bs-parent\":\"#accordionExample\"},o.a.createElement(\"div\",{className:\"accordion-body\",style:t},o.a.createElement(\"strong\",null,\"This is the first item's accordion body.\"),\" It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",o.a.createElement(\"code\",null,\".accordion-body\"),\", though the transition does limit overflow.\"))),o.a.createElement(\"div\",{className:\"accordion-item\"},o.a.createElement(\"h2\",{className:\"accordion-header\",id:\"headingTwo\"},o.a.createElement(\"button\",{className:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseTwo\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseTwo\",style:t},\"Accordion Item #2\")),o.a.createElement(\"div\",{id:\"collapseTwo\",className:\"accordion-collapse collapse\",\"aria-labelledby\":\"headingTwo\",\"data-bs-parent\":\"#accordionExample\"},o.a.createElement(\"div\",{className:\"accordion-body\",style:t},o.a.createElement(\"strong\",null,\"This is the second item's accordion body.\"),\" It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",o.a.createElement(\"code\",null,\".accordion-body\"),\", though the transition does limit overflow.\"))),o.a.createElement(\"div\",{className:\"accordion-item\"},o.a.createElement(\"h2\",{className:\"accordion-header\",id:\"headingThree\"},o.a.createElement(\"button\",{className:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseThree\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseThree\",style:t},\"Accordion Item #3\")),o.a.createElement(\"div\",{id:\"collapseThree\",className:\"accordion-collapse collapse\",\"aria-labelledby\":\"headingThree\",\"data-bs-parent\":\"#accordionExample\"},o.a.createElement(\"div\",{className:\"accordion-body\",style:t},o.a.createElement(\"strong\",null,\"This is the third item's accordion body.\"),\" It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",o.a.createElement(\"code\",null,\".accordion-body\"),\", though the transition does limit overflow.\")))),o.a.createElement(\"div\",{className:\"my-3\"},o.a.createElement(\"button\",{type:\"button\",className:b,onClick:function(){\"white\"==t.color?(n({backgroundColor:\"white\",color:\"black\"}),d(\"Dark Mode\"),h(\"btn btn-dark\")):(n({backgroundColor:\"rgb(34, 48, 60)\",color:\"white\"}),d(\"Light Mode\"),h(\"btn btn-light\"))}},i)))}i.prototype={title:\"PropTypes.String.isRequired\",text1:\"PropTypes.String\"},i.defaultProps={title:\"No-title\",text1:\"None\"};var u=t(0);var b=function(){var e=Object(l.useState)(\"light\"),a=Object(r.a)(e,2),t=a[0],n=a[1],c=Object(l.useState)({color:\"black\"}),b=Object(r.a)(c,2),h=b[0],p=b[1],g=Object(l.useState)(\"Dark Mode\"),E=Object(r.a)(g,2),v=E[0],y=E[1];return o.a.createElement(o.a.Fragment,null,o.a.createElement(s.a,null,o.a.createElement(i,{title:\"TextUtils\",text1:\"About\",mode:t,toggleMode:function(){\"light\"===t?(n(\"dark\"),y(\"Light Mode\"),p({color:\"white\"}),document.body.style.backgroundColor=\"rgb(34, 48, 60)\",document.body.style.color=\"white\",document.title=\"TextUtils - Dark\"):(n(\"light\"),y(\"Dark Mode\"),p({color:\"black\"}),document.body.style.backgroundColor=\"white\",document.body.style.color=\"black\",document.title=\"TextUtils\")},text:v,style:h}),o.a.createElement(\"div\",{className:\"container my-3\"},o.a.createElement(u.c,null,o.a.createElement(u.a,{exact:!0,path:\"/\",element:o.a.createElement(d,{heading:\"Write below\"})}),o.a.createElement(u.a,{exact:!0,path:\"/about\",element:o.a.createElement(m,null)})))))},h=function(e){e&&e instanceof Function&&t.e(1).then(t.bind(null,21)).then(function(a){var t=a.getCLS,l=a.getFID,o=a.getFCP,n=a.getLCP,c=a.getTTFB;t(e),l(e),o(e),n(e),c(e)})};c.a.createRoot(document.getElementById(\"root\")).render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(b,null))),h()},7:function(e,a,t){e.exports=t(20)}},[[7,3,2]]]);","extractedComments":[]}